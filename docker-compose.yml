version: '3'

services:
  postgres:
    image: postgres:15.7-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "keycloak"]
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: ${KC_DB_USERNAME}
      POSTGRES_PASSWORD: ${KC_DB_PASSWORD}
    volumes:
      - ./data/db:/var/lib/postgresql/data
    hostname: kc_postgres
    networks:
      - resa-network

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.1
    command: ["start-dev", "--import-realm"]
    restart: unless-stopped
    environment:
      KC_DB: postgres
      KC_DB_USERNAME: ${KC_DB_USERNAME}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
      KC_DB_URL: "jdbc:postgresql://kc_postgres:5432/keycloak"
      KC_METRICS_ENABLED: true
      KC_LOG_LEVEL: ${KC_LOG_LEVEL}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    ports:
      - ${KC_PORT}:8080
    hostname: keycloak
    networks:
      - resa-network

  resa_front:
    build:
      context: front
    env_file:
      - .env
    container_name: resa_front
    restart: always
    depends_on:
      - resa_backend
    ports:
      - ${APP_PORT}:80
    networks:
      - resa-network

  resa_backend:
    build:
      context: back
    env_file:
      - .env
    container_name: resa_backend
    restart: always
    ports:
      - ${BACK_PORT}:80
    networks:
      - resa-network

  # resa_soap:
  #   build:
  #     context: soap
  #   env_file:
  #     - .env
  #   container_name: resa_soap
  #   restart: always
  #   ports:
  #     - ${SOAP_PORT}:80
  #   networks:
  #     - resa-network

networks:
  resa-network:
    name: resa-network
    driver: bridge